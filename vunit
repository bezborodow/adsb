#!/usr/bin/env python3
from vunit import VUnit

# Create VUnit instance by parsing command line arguments
vu = VUnit.from_argv()

# Optionally add VUnit's builtin HDL utilities for checking, logging, communication...
# See http://vunit.github.io/hdl_libraries.html.
vu.add_vhdl_builtins()
# or
# vu.add_verilog_builtins()

# Create library 'lib'
lib = vu.add_library("lib")
lib.add_source_files("ip/schmitt_trigger/*.vhd")
lib.add_source_files("ip/adsb/*.vhd")

# Add all files ending in .vhd in current working directory to library
lib.add_source_files("tb/*.vhd")
lib.add_source_files("tb/schmitt_trigger/*.vhd")
tb = lib.test_bench("schmitt_trigger_tb")
tb.set_sim_option("ghdl.sim_flags", ["--wave=schmitt_trigger_tb.ghw"])

lib.add_source_files("tb/preamble_detector/*.vhd")
tb = lib.test_bench("preamble_detector_tb")
tb.set_sim_option("ghdl.sim_flags", ["--wave=preamble_detector_tb.ghw"])

lib.add_source_files("tb/adsb/*.vhd")
tb = lib.test_bench("adsb_tb")
tb.set_sim_option("ghdl.sim_flags", ["--wave=adsb_tb.ghw"])

lib.add_source_files("tb/ppm_demod/*.vhd")
tb = lib.test_bench("ppm_demod_tb")
tb.set_sim_option("ghdl.sim_flags", ["--wave=ppm_demod_tb.ghw"])

# Run vunit function
vu.main()
